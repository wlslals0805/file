<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<insert id="save">
		insert into member(
		member_id, MEMBER_PW,
		MEMBER_NICKNAME, MEMBER_EMAIL,
		MEMBER_CONTACT, MEMBER_BIRTH,
		MEMBER_POST, MEMBER_ADDR1,
		MEMBER_ADDR2,
		MEMBER_LEVEL,MEMBER_POINT,MEMBER_JOIN,
		MEMBER_LOGIN,MEMBER_CHANGE
		)
		values(
		#{memberId},#{memberPw},#{memberNickname},#{memberEmail}
		,#{memberContact},#{memberBirth},#{memberPost}
		,#{memberAddr1},#{memberAddr2},#{memberLevel}
		,#{memberPoint},#{memberJoin},#{memberLogin},#{memberChange}
		)
	</insert>


	<select id="list" resultType="MemberDto">

		select * from member

	</select>

	<select id="find" resultType="MemberDto">

		select * from member where
		member_id=#{memberId}

	</select>

	<update id="edit">

		update member set
		member_id=#{memberId},MEMBER_PW=#{memberPw},MEMBER_NICKNAME=#{memberNickname},
		MEMBER_EMAIL=#{memberEmail},MEMBER_CONTACT=#{memberContact},MEMBER_BIRTH=#{memberBirth},
		MEMBER_POST=#{memberPost},MEMBER_ADDR1=#{memberAddr1},MEMBER_ADDR2=#{memberAddr2},
		MEMBER_LEVEL=#{memberLevel},MEMBER_POINT=#{memberPoint},MEMBER_JOIN=#{memberJoin},
		MEMBER_LOGIN=#{memberLogin},MEMBER_CHANGE=#{memberChange} where
		member_id=#{memberId}
	</update>

	<select id="search" resultType="MemberDto">
		select * from member
		where
		instr(${type}, #{keyword}) > 0
		order by ${type} asc

	</select>

	<select id="complexSearch" resultType="MemberDto">

		<!-- Top N Query Header 불러오기 -->
		<include refid="pagingHeader"></include>

		select * from member

		<where>
			<if test="memberId!=null">

				and instr(member_id,#{memberId}) > 0

			</if>
			<if test="memberNickname!=null">

				and instr(member_nickname,#{memberNickname})>0
			</if>
			<if test="memberEmail!=null">
				and instr(member_email,#{memberEmail})>0
			</if>
			<!-- 연락처(일치) -->
			<if test="memberContact!=null">
				and member_contact=#{memberContact}
			</if>
			<if test="memberPost!=null">
				and instr(member_post,#{memberPost})>0
			</if>

			<!-- <![CDATA[ 구문 ]]> -->

			<choose>
				<when test="birthBegin!=null and birthEnd!=null">
					and to_date(member_birth,'YYYY-MM-DD')
					between
					to_date(#{birthBegin}|| ' ' || '00:00:00','YYYY-MM-DD HH24:MI:SS')
					and
					to_date(#{birthEnd}||' '|| '23:59:59','YYYY-MM-DD HH24:MI:SS')
				</when>
				<when test="birthBegin!=null">
	<![CDATA[
	to_date(member_birth,'YYYY-MM-DD') 
	>= 
	to_date(#{birthBegin}||' '||'00:00:00','YYYY-MM-DD HH24:MI:SS')
	 ]]>
				</when>
				<when test="birthEnd!=null">
	<![CDATA[ 
	 
	to_date(member_birth,'YYYY-MM-DD')
	<=
	to_date(#{birthEnd}||' '||'23:59:59','YYYY-MM-DD HH24:MI:SS')
	 ]]>
				</when>
			</choose>

			<if test="memberLevelList != null and memberLevelList.size() > 0">
				and member_level in
				<foreach collection="memberLevelList" open="(" close=")"
					separator="," item="level">
					#{level}
				</foreach>
			</if>
			<choose>
				<when test="pointMin != null and pointMax != null">
					and member_point between #{pointMin} and
					#{pointMax}
				</when>
				<when test="pointMin != null">
					<![CDATA[
					and member_point >= #{pointMin}
					]]>
				</when>
				<when test="pointMax != null">
					<![CDATA[
					and member_point <= #{pointMax}
					]]>
				</when>
			</choose>

		</where>

		<if test="orderList != null and orderList.size() > 0">
			order by
			<foreach collection="orderList" separator="," item="order">
				${order}
			</foreach>
		</if>

		<!-- Top N Query Footer 불러오기 -->
		<include refid="pagingFooter"></include>
	</select>

	<!-- Top N Query를 위한 코드 조각 생성(상/하) -->
	<sql id="pagingHeader">
		<if test="begin != null and end != null">
			select * from (
			select rownum rn, TMP.* from(
		</if>
	</sql>

	<sql id="pagingFooter">
		<if test="begin != null and end != null">
			)TMP
			) where rn between #{begin} and #{end}
		</if>
	</sql>







</mapper>