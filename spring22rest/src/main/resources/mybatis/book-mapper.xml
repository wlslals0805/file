<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="book">

	<!-- 등록, 목록, 검색, 상세, 수정(일부/전체), 삭제 -->
	<select id="findAll" resultType="BookDto">
		select * from book order by book_id asc
	</select>
	
	<select id="findByBookId" resultType="BookDto">
		select * from book where book_id = #{bookId}
	</select>
	
	<!-- 도서명 검색 -->
	<select id="findByBookTitle" resultType="BookDto">
<!-- 		select * from book where book_title = #{bookTitle} -->
<!-- 		select * from book where book_title like #{bookTitle} || '%' -->
<!-- 		select * from book where book_title like concat(#{bookTitle} || '%') -->
		select * from book where instr(book_title, #{bookTitle}) > 0
	</select>
	
	<insert id="save">
		insert into book(
			book_id, book_title, book_author, book_publication_date, 
			book_price, book_publisher, book_page_count, book_genre
		)
		values(
			book_seq.nextval, #{bookTitle}, #{bookAuthor}, #{bookPublicationDate}, 
			#{bookPrice}, #{bookPublisher}, #{bookPageCount}, #{bookGenre}
		)
	</insert>
	
	<delete id="deleteByBookId">
		delete book where book_id = #{bookId}
	</delete>
	
	<!-- 
		(참고) JPA에서는 등록과 수정 명령이 같다 - 둘다 save 
		- 변경 시 변경할 PK와 변경할 정보(DTO)가 전달
		- PK는 bookId, DTO는 bookDto
	-->
	<update id="change">
		update book
		<set>
			<if test="bookDto.bookTitle != null">
				book_title = #{bookDto.bookTitle},
			</if>
			<if test="bookDto.bookAuthor != null">
				book_author = #{bookDto.bookAuthor},
			</if>
			<if test="bookDto.bookPublicationDate != null">
				book_publication_date = #{bookDto.bookPublicationDate},
			</if>
			<if test="bookDto.bookPrice >= 0">
				book_price = #{bookDto.bookPrice},
			</if>
			<if test="bookDto.bookPublisher != null">
				book_publisher = #{bookDto.bookPublisher},
			</if>
			<if test="bookDto.bookPageCount > 0">
				book_page_count = #{bookDto.bookPageCount},
			</if>
			<if test="bookDto.bookGenre != null">
				book_genre = #{bookDto.bookGenre},
			</if>
		</set>
		where book_id = #{bookId} order by #{bookTitle} desc
	</update>
	
	<select id="complexSearch" resultType="BookDto">
      <!-- 메인 조회 -->
      select * from book
      <!-- 조건 -->
      <where>
         <!-- 책번호(일치) -->
         <if test="bookId != null">
            and book_id = #{bookId}
         </if>
         <!-- 제목(유사) -->
         <if test="bookTitle != null">
            and instr(book_title, #{bookTitle}) > 0
         </if>
         <!-- 저자(유사) -->
         <if test="bookAuthor != null">
            and instr(book_author, #{bookAuthor}) > 0
         </if>
         <!-- 출판일(범위) -->
         <choose>
            <when test="bookPublicationStart != null and bookPublicationEnd != null">
               and to_date(book_publication_start, 'YYYY-MM-DD')
               between
                  to_date(#{bookPublicationStart} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS')
                  and
                  to_date(#{bookPublicationEnd} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS')            
            </when>
            <when test="bookPublicationStart != null">
               <![CDATA[
                  and to_date(book_publication_date, 'YYYY-MM-DD') >=
                     to_date(#{bookPublicationStart} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS')
               ]]>
            </when>
            <when test="bookPublicationEnd != null">
               <![CDATA[
                  and to_date(book_publication_date, 'YYYY-MM-DD') >=
                     to_date(#{bookPublicationEnd} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS')
               ]]>
            </when>
         </choose>
         
         <!-- 가격(구간) -->
         <choose>
            <when test="bookMinPrice != null and bookMaxPrice != null">
               <![CDATA[
                  and book_price >= #{bookMinPrice} and book_price <= #{bookMaxPrice}
               ]]>
            </when>
            <when test="bookMinPrice != null">
               <![CDATA[
                  and book_price >= #{bookMinPrice}
               ]]>
            </when>
            <when test="bookMaxPrice != null">
               <![CDATA[
                  and book_price <= #{bookMaxPrice}
               ]]>
            </when>
         </choose>
         
         <!-- 퍼블리셔(유사) -->
         <if test="bookPublisher != null">
            and instr(book_publisher, #{bookPublisher}) > 0
         </if>
         
         <!-- 페이지(구간) -->
         <choose>
            <when test="bookPageMin != null and bookMaxPage != null">
               and book_page_count between #{bookPageMin} and #{bookPageMax}         
            </when>
            <when test="bookPageMin != null">
               <![CDATA[
                  and book_page_count >= #{bookPageMin}
               ]]>
            </when>
            <when test="bookPageMax != null">
               <![CDATA[
                  and book_page_count <= #{bookPageMax}
               ]]>
            </when>
         </choose>
         
         <!-- 장르(목록포함검사) -->
         <if test="bookGenreList != null and bookGenreList.size() > 0">
            and book_genre in
            <foreach collection="bookGenreList" open="(" close=")" separator="," item="genre">
               #{genre}
            </foreach>
         </if>
         
         <!-- 정렬 -->
         <if test="orderList != null and orderList.size() > 0">
            order by
               <foreach collection="orderList" separator="," item="order">
                  ${order}
               </foreach>
         </if>     
      </where>
   </select>
   
   <select id="selectListByPage" resultType="BookDto">
   		select * from (
   			select rownum rn, TMP.* from(
   				select * from book order by book_id asc
   				)TMP
   				)where rn between #{begin} and #{end}

   </select>
   
   

</mapper>